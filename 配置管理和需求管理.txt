需求管理和配置管理:
需求工程:需求开发/需求管理
需求开发:需求获取/需求分析/需求定义/需求确认
需求管理:需求分配/需求评审/需求基线/需求跟踪/需求变更

需求规格说明书内容:包含哪些项
同行评审:作者同行帮忙找问题,有助于早发现bug,解决bug

评审文档:管理类和技术类(基础类:需求/概要/详细)

正规检视(级别最高,一般评审技术类里基础类文档)/技术评审(一般技术类/管理类文档:比如测试用例)/走查(比较简单,比如使用手册)

需求评审(正规检视)
需求作者:产品经理/产品工程师/需求分析人员
评审组织者:项目经理/开发经理/产品经理
评审人员:项目组相关人员,开发/测试+qa , 有可能需要其他项目组的高级开发/测试

需求作者提交需求规格说明书 -- 组织者确定评审人员,发放 需求规格说明书/checklist/评审表单 -- 评审人员可选择性介绍会议,提交评审表单(测试人员在这时提出评审意见:比如需求存在问题,或者不理解地方) --组织时者汇总评审表单,组织召开评审会议(会议上需求作者答疑解惑,把提出的问题解决掉,经过评审后,大家对需求理解达成一致) -- 选择召开第三小会议 -- 需求作者修改需求 -- 评审人员确认修改 -- 发布需求 (需求经过评审之后就可以基线)

需求基线后,后面开发/设计/测试/验收 都是按照基线后需求来 ,基线后需求不能随便变更, 需求变更需要走基线变更流程
基线变更流程: 提出变更 -- CMO接受变更,提交给CCB -- CCB开会谈论, 不允许变更,拒绝 ,允许变更-- CMO开发配置项修改权限 -- 修改配置项 --- CCB审核修改, 有问题继续改,没问题 -- 收回修改权限,关闭,变更完成

需求基线后都可以走变更流程(设计/开发/测试/验收),变更后的需求需要重新评审 --- 重新基线

需求跟踪: 需求跟踪矩阵表 PM负责
系统测试项 -- 测试用例  -- 保证把需求完全/准确覆盖到

配置管理:软件生命周期各个阶段成果物经过评审后进入受控状态,进行基线,作为下一步工作基础,不能随便修改,修改需要走基线变更流程, 保证配置项的完整性/一致性/可回朔性

配置:配置项的集合
配置项:成果物(项目计划/需求规格说明书/概要设计/测试计划/测试用例....)
基线化:配置项经过评审后进行基线,确定下来,不能随便修改,最为下一步开发基线

基线:需求基线/设计基线/测试基线/发布基线

版本:一般由主版本号+次版本号+维护版本号+补丁版本号

测试会用到哪些功能:
获取最新版本配置项
获取测试软件及相关文档(工具/资料)
提交测试成果物(测试计划/测试方案/测试用例/测试报告)

配置管理工具 svn /git
svn:
checkout:检出(同一个仓库,检出一次后,后面一般都是update)
add:新增文件
delete:删除文件
commit:提交文件(本地svn做的增/删/改都需要commit才能提交到服务器)
update:每次使用前都是需要update

git : scan -- stage -- sign off -- commit -- push